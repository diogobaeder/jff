(function(){if(!Array.prototype.indexOf)
{Array.prototype.indexOf=function(elt)
{var len=this.length;var from=Number(arguments[1])||0;from=(from<0)?Math.ceil(from):Math.floor(from);if(from<0)
from+=len;for(;from<len;from++)
{if(from in this&&this[from]===elt)
return from;}
return-1;};}
if(!Array.prototype.lastIndexOf)
{Array.prototype.lastIndexOf=function(elt)
{var len=this.length;var from=Number(arguments[1]);if(isNaN(from))
{from=len-1;}
else
{from=(from<0)?Math.ceil(from):Math.floor(from);if(from<0)
from+=len;else if(from>=len)
from=len-1;}
for(;from>-1;from--)
{if(from in this&&this[from]===elt)
return from;}
return-1;};}
if(!Array.prototype.forEach)
{Array.prototype.forEach=function(fun)
{var len=this.length;if(typeof fun!="function")
throw new TypeError();var thisp=arguments[1];for(var i=0;i<len;i++)
{if(i in this)
fun.call(thisp,this[i],i,this);}};}
if(!Array.prototype.filter)
{Array.prototype.filter=function(fun)
{var len=this.length;if(typeof fun!="function")
throw new TypeError();var res=new Array();var thisp=arguments[1];for(var i=0;i<len;i++)
{if(i in this)
{var val=this[i];if(fun.call(thisp,val,i,this))
res.push(val);}}
return res;};}
if(!Array.prototype.every)
{Array.prototype.every=function(fun)
{var len=this.length;if(typeof fun!="function")
throw new TypeError();var thisp=arguments[1];for(var i=0;i<len;i++)
{if(i in this&&!fun.call(thisp,this[i],i,this))
return false;}
return true;};}
if(!Array.prototype.map)
{Array.prototype.map=function(fun)
{var len=this.length;if(typeof fun!="function")
throw new TypeError();var res=new Array(len);var thisp=arguments[1];for(var i=0;i<len;i++)
{if(i in this)
res[i]=fun.call(thisp,this[i],i,this);}
return res;};}
if(!Array.prototype.some)
{Array.prototype.some=function(fun)
{var len=this.length;if(typeof fun!="function")
throw new TypeError();var thisp=arguments[1];for(var i=0;i<len;i++)
{if(i in this&&fun.call(thisp,this[i],i,this))
return true;}
return false;};}})();
